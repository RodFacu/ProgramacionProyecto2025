/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto2025.InterfazGrafica;


import Proyecto2025.CapaPersistencia.PersistenciaApp;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import proyecto2025.CapaLogica.FachadaLogica;
import proyecto2025.CapaLogica.Login;
/**
 *
 * @author USUARIO
 */
public class PantallaLogin extends javax.swing.JDialog {
    // Clase que representa la ventana de login como un diálogo modal de Swing.
    // Extiende JDialog para poder mostrarse sobre otra ventana (ventana padre) y bloquear la interacción hasta cerrarse.

    public String getUsuario() {
        return txtUsuario.getText().trim();
        // Método para obtener el texto ingresado en el campo de usuario.
        // Se usa trim() para eliminar espacios al inicio o final.
    }

    Login log = new Login();
    // Instancia de la clase Login que almacena los ||| datos de usuario y contraseña.

    public boolean loginExitoso = false;
    // Variable que indica si el login fue exitoso o no.

    /**
     * Creates new form PantallaLogin
     * @param parent ventana padre para centrar el diálogo
     */
    public PantallaLogin(JFrame parent) {
        super(parent, "Login", true); 
        // Llama al constructor de JDialog con título "Login" y modo modal (true).
        // Modal: bloquea la interacción con otras ventanas hasta que se cierre el diálogo.

        initComponents();
        // Inicializa todos los componentes gráficos generados por NetBeans (campos de texto, botones, etc.)

        setLocationRelativeTo(parent);
        // Centra el diálogo sobre la ventana padre.

        setResizable(false);
        // Evita que el usuario cambie el tamaño del diálogo.

        setLocationRelativeTo(null);
        // Centra el diálogo en la pantalla (sobrescribe el centrado relativo al padre).

        // No se usa setDefaultCloseOperation porque se cerrará usando dispose().
    }

    public boolean isLoginExitoso() {
        return loginExitoso;
        // Getter para saber si el login fue exitoso.
        // Se puede consultar desde la ventana que abrió el diálogo.
    }




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        BtnRegistrarse = new javax.swing.JButton();
        txtContrasenia = new javax.swing.JPasswordField();
        btnVolver = new javax.swing.JButton();

        jLabel1.setText("Ingrese usuario");

        jLabel2.setText("Ingrese contraseña");

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        BtnRegistrarse.setText("Registrarse");
        BtnRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistrarseActionPerformed(evt);
            }
        });

        txtContrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraseniaActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(btnIngresar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 96, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnRegistrarse)
                        .addGap(14, 14, 14))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVolver)
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnRegistrarse)
                    .addComponent(btnIngresar))
                .addGap(18, 18, 18)
                .addComponent(btnVolver)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
        txtUsuario.addActionListener(e -> txtUsuario.transferFocus());// pasar al siguiente campo

    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void BtnRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistrarseActionPerformed
 // Método que se ejecuta cuando el usuario hace clic en el botón "Registrarse".
    
    try {
        String usuario = txtUsuario.getText().trim();
        String contrasena = new String(txtContrasenia.getPassword()).trim();
        // Obtiene los datos ingresados en los campos de texto.
        // trim() elimina espacios al inicio y al final.

        if (usuario.isEmpty() || contrasena.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete todos los campos");
            return;
            // Valida que los campos no estén vacíos.
            // Si falta algún dato, muestra un mensaje y termina la ejecución del método.
        }

        // Guarda los datos en la instancia de Login
        log.setUsuario(usuario);
        log.setContrasena(contrasena);

        FachadaLogica.registrarUsuario(log);
        // Llama a la fachada lógica para registrar el usuario en la base de datos.

        JOptionPane.showMessageDialog(this, "Usuario registrado correctamente");
        limpiarCampos();
        // Muestra un mensaje de éxito y limpia los campos de texto.

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        // Captura cualquier excepción que ocurra durante el registro y muestra un mensaje.
    }
}

private void limpiarCampos() {
    txtUsuario.setText("");
    txtContrasenia.setText("");
    // Método auxiliar que borra el contenido de los campos de usuario y contraseña.
    // Se usa después de un registro exitoso para dejar la ventana lista para un nuevo ingreso.

        // TODO add your handling code here
      
          
            
        

    }//GEN-LAST:event_BtnRegistrarseActionPerformed


    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
       
// Método que se ejecuta cuando el usuario hace clic en el botón "Ingresar" para iniciar sesión.
    
    try {
        String usuario = txtUsuario.getText().trim();
        String contrasena = new String(txtContrasenia.getPassword()).trim();
        // Obtiene los datos ingresados en los campos de usuario y contraseña.
        // Se usa trim() para eliminar espacios al inicio y al final.

        if (usuario.isEmpty() || contrasena.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete todos los campos");
            return;
            // Valida que los campos no estén vacíos. Si lo están, muestra mensaje y sale del método.
        }

        boolean valido = FachadaLogica.iniciarSesion(usuario, contrasena);
        // Llama a la fachada lógica para verificar las credenciales en la base de datos.
        // Devuelve true si usuario y contraseña coinciden.

        if (valido) {
            loginExitoso = true;
            JOptionPane.showMessageDialog(this, "Bienvenido " + usuario);
            // Indica éxito del login y muestra mensaje de bienvenida.

            Login.setUsuarioActual(usuario);
            // Actualiza el usuario actual de la aplicación usando la variable estática de la clase Login.

            // Abrir la ventana de administración directamente después del login
            PantallaInformacionAdministracion infoAdm = new PantallaInformacionAdministracion(usuario);
            infoAdm.setVisible(true);

            this.dispose();
            // Cierra el diálogo de login para dejar visible solo la ventana de administración.
        } else {
            loginExitoso = false;
            JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrectos");
            // Mensaje de error si las credenciales no coinciden.
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        // Captura cualquier excepción y la muestra en un mensaje.
    }

    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed

        //Retorna una pantalla hacia atras
 dispose();
    PantallaPrincipal principal = new PantallaPrincipal();
    principal.setVisible(true); 

        // TODO add your handling code here:
    }//GEN-LAST:event_btnVolverActionPerformed

    private void txtContraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraseniaActionPerformed
        // TODO add your handling code here:
        txtContrasenia.addActionListener(e ->  txtContrasenia.transferFocus());

    }//GEN-LAST:event_txtContraseniaActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRegistrarse;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField txtContrasenia;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
